# Generated by Django 3.0.5 on 2020-04-28 19:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.IntegerField(choices=[(1, 'Fruit'), (2, 'Vegetable'), (3, 'Protein'), (4, 'Dairy'), (5, 'Grains'), (6, 'Oils')])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('number_person', models.IntegerField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.IntegerField()),
                ('part', models.BinaryField(choices=[(0, 'Ingredients'), (1, 'Steps')])),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
            ],
            options={
                'ordering': ['recipe_id', 'part', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prep_time', models.IntegerField()),
                ('cook_time', models.IntegerField()),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
            ],
            options={
                'ordering': ['recipe_id', 'cook_time'],
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('time', models.IntegerField()),
                ('direction', models.TextField()),
                ('parallel', models.BooleanField(default=False)),
                ('section_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Section')),
                ('sectioon_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='IngredientsNutrition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calories', models.FloatField()),
                ('fat', models.FloatField()),
                ('saturates', models.FloatField()),
                ('carbs', models.FloatField()),
                ('sugar', models.FloatField()),
                ('fibre', models.FloatField()),
                ('protein', models.FloatField()),
                ('salt', models.FloatField()),
                ('ingredient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Ingredient')),
            ],
            options={
                'ordering': ['ingredient_id'],
            },
        ),
        migrations.CreateModel(
            name='IngredientAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('measurement', models.BinaryField(choices=[(0, 'weight'), (1, 'volume')])),
                ('ingredient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Ingredient')),
                ('section_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Section')),
            ],
            options={
                'ordering': ['amount'],
            },
        ),
    ]
